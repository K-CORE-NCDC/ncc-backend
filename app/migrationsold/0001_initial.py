# Generated by Django 3.2.6 on 2023-10-18 05:56

import app.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(default='', max_length=200)),
                ('approved_date', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GenevariantsankeyNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hugo_symbol', models.CharField(blank=True, max_length=255, null=True)),
                ('variant_classification', models.CharField(blank=True, max_length=255, null=True)),
                ('dbsnp_rs', models.CharField(blank=True, max_length=255, null=True)),
                ('diseasename', models.CharField(blank=True, max_length=255, null=True)),
                ('drugname', models.CharField(blank=True, max_length=255, null=True)),
                ('sourceurl', models.TextField(blank=True, null=True)),
                ('pmid_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genevariantsankeynew',
            },
        ),
        migrations.CreateModel(
            name='Hg38',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hugo_symbol', models.CharField(blank=True, max_length=255, null=True)),
                ('gene_description', models.CharField(blank=True, max_length=255, null=True)),
                ('start_position', models.IntegerField(blank=True, null=True)),
                ('end_position', models.IntegerField(blank=True, null=True)),
                ('chromosome', models.CharField(blank=True, max_length=50, null=True)),
                ('gene_stable_id', models.CharField(blank=True, max_length=155, null=True)),
                ('gene_stable_id_version', models.CharField(blank=True, max_length=155, null=True)),
            ],
            options={
                'db_table': 'hg38',
            },
        ),
        migrations.CreateModel(
            name='Interpro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protein', models.CharField(blank=True, max_length=155, null=True)),
                ('ipr', models.CharField(blank=True, max_length=155, null=True)),
                ('domain', models.TextField(blank=True, null=True)),
                ('pfamid', models.CharField(blank=True, max_length=155, null=True)),
                ('start_codon', models.IntegerField(blank=True, null=True)),
                ('end_codon', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'interpro',
            },
        ),
        migrations.CreateModel(
            name='RnidDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ybc_key', models.CharField(max_length=55, unique=True)),
                ('rn_key', models.CharField(max_length=55, unique=True)),
                ('brst_key', models.CharField(max_length=55, unique=True)),
                ('dna_mutation', models.BooleanField(blank=True, null=True)),
                ('methylationtab', models.BooleanField(blank=True, null=True)),
                ('rnas', models.BooleanField(blank=True, null=True)),
                ('phosphotab', models.BooleanField(blank=True, null=True)),
                ('proteomes', models.BooleanField(blank=True, null=True)),
                ('cnv', models.BooleanField(blank=True, null=True)),
                ('fusion_gene', models.BooleanField(blank=True, null=True)),
                ('total', models.IntegerField(blank=True, null=True)),
                ('image', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rnid',
            },
        ),
        migrations.CreateModel(
            name='SessionDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('start_time', models.CharField(blank=True, max_length=255, null=True)),
                ('end_time', models.CharField(blank=True, max_length=255, null=True)),
                ('visitedDate', models.DateField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('langitude', models.FloatField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('viz_type', models.CharField(blank=True, max_length=255, null=True)),
                ('tab_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sessiondetails',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt_sbst_no', models.CharField(blank=True, max_length=155, null=True)),
                ('gene_name', models.CharField(blank=True, max_length=155, null=True)),
                ('gene_vl', models.FloatField(blank=True, null=True)),
                ('z_score', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=2, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'rna',
            },
        ),
        migrations.CreateModel(
            name='Proteome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt_sbst_no', models.CharField(blank=True, max_length=155, null=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True)),
                ('batch_id', models.CharField(blank=True, max_length=155, null=True)),
                ('gene_name', models.CharField(blank=True, max_length=155, null=True)),
                ('p_name', models.CharField(blank=True, max_length=155, null=True)),
                ('gene_vl', models.FloatField(blank=True, null=True)),
                ('z_score', models.FloatField(blank=True, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'proteome',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forget_password_token', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('unique_pin', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Phospho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt_sbst_no', models.CharField(blank=True, max_length=155, null=True)),
                ('type', models.CharField(blank=True, max_length=25, null=True)),
                ('batch_id', models.CharField(blank=True, max_length=155, null=True)),
                ('gene_name', models.CharField(blank=True, max_length=155, null=True)),
                ('site', models.CharField(blank=True, max_length=45, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('gene_vl', models.FloatField(blank=True, null=True)),
                ('z_score', models.FloatField(blank=True, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'phospho',
            },
        ),
        migrations.CreateModel(
            name='OncoSampleImagesInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'onco_sample_images_info',
            },
        ),
        migrations.CreateModel(
            name='Methylation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt_sbst_no', models.CharField(blank=True, max_length=155, null=True)),
                ('gene_name', models.CharField(blank=True, max_length=155, null=True)),
                ('target_id', models.CharField(blank=True, max_length=155, null=True)),
                ('target_type', models.CharField(blank=True, max_length=25, null=True)),
                ('gene_vl', models.FloatField(blank=True, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'methylation',
            },
        ),
        migrations.CreateModel(
            name='Fusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_gene_name', models.CharField(blank=True, max_length=100, null=True)),
                ('left_gene_ensmbl_id', models.CharField(blank=True, max_length=100, null=True)),
                ('left_gene_chr', models.CharField(blank=True, max_length=100, null=True)),
                ('left_gene_pos', models.IntegerField(blank=True, null=True)),
                ('left_hg38_pos', models.IntegerField(blank=True, null=True)),
                ('right_gene_name', models.CharField(blank=True, max_length=100, null=True)),
                ('right_gene_ensmbl_id', models.CharField(blank=True, max_length=100, null=True)),
                ('right_gene_chr', models.CharField(blank=True, max_length=100, null=True)),
                ('right_gene_pos', models.IntegerField(blank=True, null=True)),
                ('right_hg38_pos', models.IntegerField(blank=True, null=True)),
                ('junction_read_count', models.IntegerField(blank=True, null=True)),
                ('spanning_frag_count', models.IntegerField(blank=True, null=True)),
                ('splice_type', models.CharField(blank=True, max_length=100, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'fusion',
            },
        ),
        migrations.CreateModel(
            name='DownloadVisualization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('chart_name', models.CharField(blank=True, max_length=255, null=True)),
                ('project_id', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DnaMutation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hugo_symbol', models.CharField(blank=True, max_length=255, null=True)),
                ('entrez_gene_id', models.IntegerField(blank=True, null=True)),
                ('center', models.CharField(blank=True, max_length=155, null=True)),
                ('ncbi_build', models.CharField(blank=True, max_length=155, null=True)),
                ('chromosome', models.CharField(blank=True, max_length=50, null=True)),
                ('start_position', models.IntegerField(blank=True, null=True)),
                ('end_position', models.IntegerField(blank=True, null=True)),
                ('strand', models.CharField(blank=True, max_length=255, null=True)),
                ('variant_classification', models.CharField(blank=True, max_length=155, null=True)),
                ('variant_type', models.CharField(blank=True, max_length=255, null=True)),
                ('reference_allele', models.CharField(blank=True, max_length=155, null=True)),
                ('tumor_seq_allele1', models.CharField(blank=True, max_length=255, null=True)),
                ('tumor_seq_allele2', models.CharField(blank=True, max_length=255, null=True)),
                ('dbsnp_rs', models.TextField(blank=True, null=True)),
                ('dbsnp_val_status', models.TextField(blank=True, null=True)),
                ('tumor_sample_barcode', models.CharField(blank=True, max_length=155, null=True)),
                ('genome_change', models.TextField(blank=True, null=True)),
                ('annotation_transcript', models.CharField(blank=True, max_length=155, null=True)),
                ('transcript_strand', models.CharField(blank=True, max_length=155, null=True)),
                ('transcript_exon', models.IntegerField(blank=True, null=True)),
                ('transcript_position', models.CharField(blank=True, max_length=155, null=True)),
                ('cdna_change', models.TextField(blank=True, null=True)),
                ('codon_change', models.TextField(blank=True, null=True)),
                ('protein_change', models.CharField(blank=True, max_length=255, null=True)),
                ('refseq_mrna_id', models.CharField(blank=True, max_length=255, null=True)),
                ('refseq_prot_id', models.CharField(blank=True, max_length=255, null=True)),
                ('swiss_prot_acc_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ref_context', models.TextField(blank=True, null=True)),
                ('gc_content', models.CharField(blank=True, max_length=255, null=True)),
                ('ensembl_so_term', models.CharField(blank=True, max_length=255, null=True)),
                ('hgnc_chromosome', models.CharField(blank=True, max_length=255, null=True)),
                ('refseq_mrna_id_2', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_variant_classification', models.CharField(blank=True, max_length=255, null=True)),
                ('aa_size', models.CharField(blank=True, max_length=255, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'dna_mutation',
            },
        ),
        migrations.CreateModel(
            name='Cnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chromosome', models.CharField(blank=True, max_length=25, null=True)),
                ('start_pos', models.IntegerField(blank=True, null=True)),
                ('end_pos', models.IntegerField(blank=True, null=True)),
                ('gene', models.CharField(blank=True, max_length=55, null=True)),
                ('log2', models.FloatField(blank=True, null=True)),
                ('cn', models.IntegerField(blank=True, null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('probes', models.IntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('r_fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cnv_fk', to='app.rniddetails')),
            ],
            options={
                'db_table': 'cnv',
            },
        ),
        migrations.CreateModel(
            name='ClinicalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt_sbst_no', models.CharField(blank=True, max_length=155, null=True)),
                ('bmi_vl', models.FloatField(blank=True, null=True)),
                ('rgst_ymd', models.DateField(blank=True, null=True)),
                ('drnk_yn', models.BooleanField(blank=True, null=True)),
                ('smok_curr_yn', models.BooleanField(blank=True, null=True)),
                ('smok_yn', models.BooleanField(blank=True, null=True)),
                ('fmhs_brst_yn', models.BooleanField(blank=True, null=True)),
                ('oc_yn', models.BooleanField(blank=True, null=True)),
                ('hrt_yn', models.BooleanField(blank=True, null=True)),
                ('mena_age', models.FloatField(blank=True, null=True)),
                ('meno_yn', models.BooleanField(blank=True, null=True)),
                ('delv_yn', models.BooleanField(blank=True, null=True)),
                ('feed_yn', models.BooleanField(blank=True, null=True)),
                ('feed_drtn_mnth', models.FloatField(blank=True, null=True)),
                ('bila_cncr_yn', models.BooleanField(blank=True, null=True)),
                ('rgst_dt', models.CharField(blank=True, max_length=155, null=True)),
                ('imnl_read_ymd', models.DateField(blank=True, null=True)),
                ('er_score', models.IntegerField(blank=True, null=True)),
                ('pr_score', models.IntegerField(blank=True, null=True)),
                ('her2_score', models.CharField(blank=True, max_length=155, null=True)),
                ('ki67_score', models.IntegerField(blank=True, null=True)),
                ('t_category', models.CharField(blank=True, max_length=155, null=True)),
                ('n_category', models.CharField(blank=True, max_length=155, null=True)),
                ('sex_cd', models.CharField(blank=True, max_length=155, null=True)),
                ('diag_age', models.IntegerField(blank=True, null=True)),
                ('rlps_yn', models.BooleanField(blank=True, null=True)),
                ('rlps_date', models.DateField(blank=True, null=True)),
                ('rlps_cnfr_drtn', models.FloatField(blank=True, null=True)),
                ('death_yn', models.BooleanField(blank=True, null=True)),
                ('death_cnfr_drtn', models.FloatField(blank=True, null=True)),
                ('rnid', models.ForeignKey(blank=True, db_column='rnid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.rniddetails')),
            ],
            options={
                'db_table': 'clinical_information',
            },
        ),
        migrations.AddIndex(
            model_name='sessiondetails',
            index=models.Index(fields=['tab_name'], name='sessiondeta_tab_nam_226ebe_idx'),
        ),
    ]
